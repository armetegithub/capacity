{"version":3,"sources":["components/navbar/capacity_logo.svg","components/contents/startup.svg","components/contents/portada1.svg","components/contents/start_up.svg","service/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/contents/ProjectItem.js","components/header/Header.js","components/contents/Contents.js","service/ProjectsService.js","components/Searchbar/SearchBar.js","components/Projects/Projects.js","components/navbar/Navigavtor.js","components/Foundations/FoundationItem.js","components/Foundations/Foundations.js","service/FoundationsService.js","components/Projects/ProjectDetail.js","components/Foundations/FoundationDetail.js","components/Projects/DeleteProject.js","components/Foundations/PostFoundation.js","components/Projects/PostProject.js","components/Projects/UnsuscribeProject.js","components/User/UserDetail.js","components/Projects/EditProject.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","signup","username","password","email","comunidad","service","post","then","response","data","login","console","log","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","nextProps","setState","className","to","src","logo","alt","width","class","_id","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","name","value","comunidades","sort","map","onSubmit","type","onChange","cargar_provincias","Login","history","push","ProjectItem","unfollowproject","id","succeed","allprojects","project","project_type","imageURL","info","Header","portada","Contents","fetchProjects","_","projects","key","ProjectsService","allProjects","subscribeProject","idProject","idUser","deleteProject","editProject","put","oneProject","addProject","SearchBar","filterProjects","Projects","handleSearch","search","FoundationtItem","foundation","Foundations","fetchFoundations","foundations","FoundationItem","FoundationsService","allFoundations","addFoundation","oneFoundation","ProjectDetail","services","newSuscriber","updateProject","specificProject","err","componentDidMount","match","params","oneproject","getOwnerOfProject","foundationOfThisProject","foundationsCreatedByCurrentUser","foundations_created","some","el","userId","projectId","React","FoundationDetail","onefoundation","description","NewFoundation","foundationsService","cols","rows","NewProject","projectsService","startup","UnsuscribeProject","UserDetail","subscribers","fetchAllInfo","userInSession","responseFromApi","projectID","SUBSCRIPTOR","portadaprofile","EditProject","App","projectsAll","filteredProjects","filter","toLowerCase","includes","userObj","fetchOneUser","UserService","oneService","oneUser","fetchOneFoundation","fetchUser","Fragment","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.72d28b8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/capacity_logo.11168314.svg\";","module.exports = __webpack_public_path__ + \"static/media/startup.4a2c2d17.svg\";","module.exports = __webpack_public_path__ + \"static/media/portada1.89436ec0.svg\";","module.exports = __webpack_public_path__ + \"static/media/start_up.ab9f6762.svg\";","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL:`${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, email, comunidad) => {\n    return this.service.post('/signup', {username, password, email, comunidad})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    console.log(username, password)\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../service/AuthService\";\nimport logo from \"../navbar/capacity_logo.svg\";\n\n\n\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n    \n        <div className=\"navbar-div\">\n          <nav className=\"nav-style\">\n            <Link to=\"/\">\n              <img src={logo} alt=\"logo\" width=\"400px\" class=\"logo\" />\n            </Link>\n            <ul>\n              <div className=\"right-nav\">\n              <li>\n                  <Link to={`/account/user/${this.state.loggedInUser._id}`}>Perfil</Link>\n                </li>\n                <li>\n                  <Link to=\"/foundations\">Fundaciones</Link>\n                </li>\n                <li>\n                  <Link to=\"/projects\">Proyectos</Link>\n                </li>\n                <li>\n                  <a onClick={this.handleLogout}>Logout</a>\n                </li>\n              </div>\n            \n            </ul>\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"navbar-div\">\n          <nav className=\"nav-style\">\n            <Link to=\"#\">\n              <img src={logo} alt=\"logo\" width=\"400px\" class=\"logo\" />\n            </Link>\n            <ul>\n              <div className=\"right-nav\">\n                <li>\n                  <Link to=\"/signup\">Signup</Link>\n                </li>\n                <li>\n                  <Link to=\"/login\">Login</Link>\n                </li>\n              </div>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../../service/AuthService';\n\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', email: '', comunidad: '' };\n    this.service = new AuthService();\n  }\n\n  \n\n   // Rutina para agregar opciones a un <select>\n\n  cargar_provincias() {\n  let comunidades = [\"Andalucía\", \"Aragón\", \"Canarias\", \"Cantabria\", \"Castilla y León\", \"Castilla-La Mancha\", \"Cataluña\", \"Ceuta\", \"Comunidad Valenciana\", \"Comunidad de Madrid\", \"Extremadura\", \"Galicia\", \"Islas Baleares\", \"La Rioja\", \"Melilla\", \"Navarra\", \"País Vasco\", \"Asturias\", \"Murcia\"];\n\n    // Ordena el Array Alfabeticamente, es muy facil ;)):\n      comunidades.sort();\n        return comunidades.map(comunidad => <option>{comunidad}</option>)\n    //addOptions(\"provincia\", comunidades);\n   }\n\n\n   \n  \n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n    const comunidad = this.state.comunidad;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password, email, comunidad)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            email: \"\",\n            comunidad: \"\"\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        email: email,\n        comunidad: comunidad,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (e) => {  \n    const {name, value} = e.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Bienvenido, Por favor, crea tu cuenta</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n\n          <fieldset>\n            <label>Email:</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n\n          <fieldset>\n          <label>Elige tu comunidad autónoma: </label>\n\n          <select name=\"comunidad\" value={this.state.comunidad} onChange={ e => this.handleChange(e)}>\n          \n            {this.cargar_provincias()}\n            </select>\n          </fieldset>\n\n          \n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../service/AuthService';\nimport \"./Login.scss\"\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    \n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n        this.props.history.push('/projects')\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    console.log(\"Dentro de login\")\n    return (\n    <div className=\"container-form\">\n      <h3>Welcome to Capacity</h3>\n\n      <form className=\"form-style-9\" onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './ProjectItem.scss';\n\n\nclass ProjectItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: \"\",\n      id: \"\",\n      succeed: \"\",\n      error: false,\n      allprojects: []\n    };\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault()\n    this.props.unfollowproject()\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n\n\n\n  render() {\n  return (\n    <div>\n      <div className=\"despliegue\">\n        <p>{this.props.project.project_type}</p>\n        <Link to={`/projects/${this.props.project._id}`}><h1>{this.props.project.name}</h1></Link>\n        <Link to={`/projects/${this.props.project._id}`}><img src={this.props.project.imageURL} width=\"300px\" /></Link>\n        <Link to={`/projects/${this.props.project._id}`}><p>{this.props.project.info}</p></Link>\n        {/* <form onSubmit={e => this.handleFormSubmit(e)}>\n        <input className=\"button\" type=\"submit\" value=\"Dejar de Seguir\" />\n        </form>\n        */}\n\n      </div>\n    </div>\n  );\n}\n}\n\n\n\n\n\nexport default ProjectItem;\n","import React, { Component } from 'react';\n// import ProjectItem from './ProjectItem';\n// import './Content.scss';\nimport 'typeface-roboto';\nimport portada from '../contents/portada1.svg';\n\n\nclass Header extends Component {\n    constructor(props){\n      super(props)\n    }\n  \n  \n    render() {\n      return (<div className=\"header\">\n  \n        <div className=\"cabecera-portada\">\n          <h1>Bienvenidos a Capacity</h1>\n          <h2>¿Estás listo para poner al máximo tus capacidades?</h2>\n          <img src={portada} alt=\"portada\" width=\"600px\" class=\"portada\" />\n        </div>\n        </div>\n  \n      \n      )}\n  }\n  \n  export default Header;","import React, { Component } from 'react';\nimport ProjectItem from './ProjectItem';\nimport './Content.scss';\nimport 'typeface-roboto';\nimport portada from '../contents/portada1.svg';\nimport Header from '../header/Header';\n\n\n\n//clase componente que renderiza los contenidos genéricos\n//usando rendering condicional y el componente Switch que ya conocéis podéis mostrar los contenidos oportunos que queráis\nclass Contents extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  componentDidMount(){\n    this.props.fetchProjects()\n    .then(_ => console.log(this.props))\n  }\n\n  render() {\n    return (<div className=\"contents\">\n\n      <Header />\n\n      <h3>ÚLTIMOS PROYECTOS</h3>\n       \n        <div className= \"contenedor\">\n    \n          \n        {this.props.projects.map(project=>(\n       \n            <ProjectItem project={project} key={project._id}/>\n          \n        ))}\n        </div>\n        \n        </div>\n       \n    );\n  }\n}\n\nexport default Contents;","import axios from 'axios';\n\nclass ProjectsService {\n    constructor() {\n      this.service = axios.create({\n        baseURL:`${process.env.REACT_APP_API_URL}/projects`,\n        withCredentials: true\n      });\n    }\n\n    allProjects = () => {\n        return this.service.get('/')\n        .then(response => {\n            return response.data\n        });\n    }\n\n    subscribeProject = (idProject, idUser) => {\n      console.log(idUser)\n      return this.service.post(`/subscribe/${idProject}`, idUser)\n      .then(response => response.data)\n    }\n\n    // deleteProject = (idProject, idFoundation) => {\n    //   console.log(idFoundation)\n    //   return this.service.post(`/delete/${idProject}`, idFoundation)\n    //   .then(response => response.data)\n    //  }\n\n\n\n     deleteProject = (idProject, idUser) => {\n      return this.service.post(`/delete/${idUser}/${idProject}`)\n      .then(response => response.data)\n    }\n\n    editProject = (idProject, project) => {\n      return this.service.put(`/edit/${idProject}`, project)\n      .then(response => response.data)\n    } \n\n    oneProject = id => this.service.get(`/${id}`).then(response => response.data);\n\n    addProject = project => {\n      console.log(project)\n      this.service.post('/addproject', project).then(response => response.data);\n    };\n\n    \n    \n\n\n\n     \n  \n  }\n\n\n  \n\n\n\n\n\n\nexport default ProjectsService;","import React, { Component } from \"react\";\nimport './SearchBar.scss'\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render(){\n \n    return(\n        <div className=\"search-container\">\n          <div className=\"search-box\">\n            <input \n            \n            onChange={(e)=>this.props.filterProjects(e)} \n            className=\"search-input\"\n            type=\"text\"/>\n            <span></span>\n            </div>\n        </div>\n    )\n  }\n}\nexport default SearchBar;","import React, { Component } from \"react\";\nimport ProjectItem from \"../contents/ProjectItem\";\nimport \"./Project.scss\";\nimport \"typeface-roboto\";\nimport Header from \"../header/Header\";\nimport SearchBar from \"../Searchbar/SearchBar\";\nimport Navigator from \"../navbar/Navigavtor\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchProjects().then(_ => console.log(this.props));\n  }\n\n  handleSearch = search => {\n    console.log(search);\n  };\n\n  render() {\n    return (\n      <div className=\"contents\">\n        <h3>PROYECTOS</h3>\n        <div className=\"projects-search\">\n        <SearchBar                     \n          filterProjects={(e)=>this.props.filterProjects(e)}\n          />\n        </div>\n\n        <div className=\"contenedor\">\n          {this.props.projects.map(project => (\n            <ProjectItem project={project} key={project._id} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../service/AuthService\";\nimport logo from \"../navbar/capacity_logo.svg\";\n\n\n\n\n\nclass Navigator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <ul>\n            <li>\n              <a onClick={this.handleLogout}>Logout</a>\n            </li>\n          </ul>\n\n          <div className=\"header\">\n            <h2>Welcome {this.state.loggedInUser.username} - Ironhacker</h2>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <div className=\"navbar-div\">\n          <nav className=\"nav-style\">\n            <Link to=\"#\">\n              <img src={logo} alt=\"logo\" width=\"400px\" class=\"logo\" />\n            </Link>\n            <ul>\n              <div className=\"right-nav\">\n                <li>\n                  <Link to=\"/signup\">Signup</Link>\n                </li>\n                <li>\n                  <Link to=\"/login\">Login</Link>\n                </li>\n              </div>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navigator;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction FoundationtItem(props) {\n  return (\n    <div>\n      <div className=\"despliegue\">\n       \n      <Link to={`/foundations/${props.foundation._id}`}><h1>{props.foundation.name}</h1></Link>\n      <Link to={`/foundations/${props.foundation._id}`}><img src={props.foundation.imageURL} width=\"300px\" /></Link>\n      \n      </div>\n    </div>\n  );\n}\n\nexport default FoundationtItem;","import React, { Component } from \"react\";\nimport FoundationItem from \"./FoundationItem\";\nimport {Link} from 'react-router-dom';\nimport './Foundation.scss';\nimport \"typeface-roboto\";\nimport Header from \"../header/Header\";\nimport SearhcBar from \"../Searchbar/SearchBar\";\nimport Navigator from \"../navbar/Navigavtor\";\nimport './FoundationDetail.scss';\nimport './Foundations.scss';\n\nclass Foundations extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchFoundations().then(_ => console.log(this.props));\n  }\n\n  handleSearch = search => {\n    console.log(search);\n  };\n\n  render() {\n    return (\n\n    \n      <div className=\"contents\">\n          <div className=\"button\">\n             <Link className=\"button\" to=\"/addFoundation\">Crear fundación</Link>\n          </div>\n      \n        <h3>Foundations</h3>\n       \n       \n        \n        <div className=\"contenedor\">\n          {this.props.foundations.map(foundation => (\n            <FoundationItem foundation={foundation} key={foundation._id} />\n          ))}\n        </div>\n      </div>\n \n    );\n  }\n}\n\nexport default Foundations;\n","import axios from 'axios';\n\nclass FoundationsService {\n    constructor() {\n      this.service = axios.create({\n        baseURL:`${process.env.REACT_APP_API_URL}/foundations`,\n        withCredentials: true\n      });\n    }\n\n    allFoundations = () => {\n        return this.service.get('/')\n        .then(response => {\n            return response.data\n        });\n    }\n\n\n    addFoundation = foundation => {\n      console.log(foundation)\n      this.service.post('/addFoundation', foundation).then(response => response.data);\n    };\n\n\n\n    oneFoundation = id => this.service.get(`/${id}`).then(response => response.data);\n}\n\n\n\nexport default FoundationsService;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectsService from \"../../service/ProjectsService\";\nexport default class ProjectDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { project: null };\n    this.services = new ProjectsService();\n  }\n subscribeProject = () =>{\n  this.services.subscribeProject(this.state.project._id, \n    {newSuscriber: this.props.loggedInUser._id })\n  .then(updateProject => this.setState({specificProject: updateProject}))\n  .catch(err => console.log(err));\n }\n  \n  componentDidMount = () => {\n    this.oneProject()\n  };\n  oneProject = () => {\n    this.services\n      .oneProject(this.props.match.params.id)\n      .then(oneproject => {\n          this.setState({ project: oneproject })\n        }, () => console.log(this.getOwnerOfProject()) )\n      .catch(err => console.log(err));\n  };\n  getOwnerOfProject = () => {\n    let foundationOfThisProject = this.state.project.foundation\n    let foundationsCreatedByCurrentUser = this.props.loggedInUser.foundations_created;\n    console.log(foundationsCreatedByCurrentUser.some(el => el._id == foundationOfThisProject))\n    return foundationsCreatedByCurrentUser.some(el => el._id == foundationOfThisProject)\n  }\n\n  deleteProject = () => {\n    let userId = this.props.loggedInUser._id;\n    let projectId = this.state.project._id\n    this.services.deleteProject(projectId, userId)\n    .then(_ => this.props.history.push('/projects'))\n  }  \n  render() {\n    return (\n      <div className=\"Project\">\n        {this.state.project ? (\n          <div className=\"detail-view\">\n            <h1>{this.state.project.name}</h1>\n            <img src={this.state.project.imageURL} />\n            <p>{this.state.project.info}</p>\n            <Link to={`/editproject/${this.state.project._id}`}>Editar</Link>\n            <button onClick={()=>this.subscribeProject()}>Inscribirse</button>\n            {this.getOwnerOfProject() && <button onClick={()=>this.deleteProject()}>Eliminar proyecto</button>}\n          </div>\n        ) : (\n          console.log(\"No hay na\")\n        )}\n      </div>\n    );\n  }\n}\n\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FoundationsService from \"../../service/FoundationsService\";\nimport ProjectItem from \"../contents/ProjectItem\";\nimport './FoundationDetail.scss';\nimport SearhcBar from \"../Searchbar/SearchBar\";\nimport axios from 'axios';\nimport DeleteProject from \"../Projects/DeleteProject\";\nexport default class FoundationDetail extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n    this.state = { foundation: null };\n    this.services = new FoundationsService();\n  }\n\n\n\n  componentDidMount = () => this.oneFoundation();\n  oneFoundation = () => {\n    this.services\n      .oneFoundation(this.props.match.params.id)\n      .then(onefoundation => this.setState({ foundation: onefoundation }))\n      .catch(err => console.log(err));\n  };\n\n\n  render() {\n    console.log(this.state.foundation);\n    return (\n      <div className=\"foundation\">\n      <div className=\"button\">\n      <Link to=\"/addproject\">Crear Nuevo Proyecto</Link>\n      </div>\n      \n\n        {this.state.foundation ? (\n          <div className=\"detail-view\">\n            <h1>{this.state.foundation.name}</h1>\n            <img src={this.state.foundation.imageURL} />\n            <p>{this.state.foundation.description}</p>\n          </div>\n        ) : (\n          console.log(\"No hay na\")\n        )}\n\n\n        <div className=\"despliegue-proyect\">\n        {this.state.foundation && this.state.foundation.projects.map(project => (\n            <div>\n            <ProjectItem project={project} key={project._id} />\n       \n            </div>\n                  \n        ))}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n","import React from \"react\";\n\nimport ProjectsService from \"../../service/ProjectsService\";\n\nexport default class DeleteProject extends React.Component {\n  projectsService = new ProjectsService();\n\n  state = {\n     projects: []\n  };\n\n  componentDidMount() {}\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n   \n  };\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.projetsService.deleteProject(this.state);\n  };\n\n  \n\n  render() {\n       return(\n    <form onSubmit={e => this.handleFormSubmit(e)}>\n    <input className=\"button\" type=\"submit\" value=\"Eliminar Proyecto\" />\n    </form>\n   \n       )}\n}","import React from \"react\";\nimport './PostFoundation.scss'\nimport FoundationsService from \"../../service/FoundationsService\";\n\nexport default class NewFoundation extends React.Component {\n  foundationsService = new FoundationsService();\n\n  state = {\n     name: \"\", info: \"\", project_type: \"\", comunidad: \"\" \n  };\n\n  componentDidMount() {}\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n   \n  };\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.foundationsService.addFoundation(this.state);\n  };\n\n  cargar_provincias() {\n    let comunidades = [\"Andalucía\", \"Aragón\", \"Canarias\", \"Cantabria\", \"Castilla y León\", \"Castilla-La Mancha\", \"Cataluña\", \"Ceuta\", \"Comunidad Valenciana\", \"Comunidad de Madrid\", \"Extremadura\", \"Galicia\", \"Islas Baleares\", \"La Rioja\", \"Melilla\", \"Navarra\", \"País Vasco\", \"Asturias\", \"Murcia\"];\n  \n      // Ordena el Array Alfabeticamente, es muy facil ;)):\n        comunidades.sort();\n          return comunidades.map(comunidad => <option>{comunidad}</option>)\n      //addOptions(\"provincia\", comunidades);\n     }\n\n\n  render() {\n    return (\n      <div className=\"NewFoundation\">\n        <h1>New Foundation Page</h1>\n\n        <form className=\"form-style-9\" onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Nombre de la fundación:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <fieldset>\n            <label>Describe tu fundación:</label>\n            <textarea \n              cols=\"40\" rows=\"5\"\n              type=\"text\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label>Email de la fundación:</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <label>Elige tu comunidad autónoma: </label>\n\n          <fieldset>\n            <select\n              name=\"comunidad\"\n              value={this.state.comunidad}\n              onChange={e => this.handleChange(e)}\n            >\n              {this.cargar_provincias()}\n            </select>\n          </fieldset>\n          <input type=\"submit\" value=\"Crear nueva fundación\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport startup from '../contents/startup.svg';\nimport ProjectsService from \"../../service/ProjectsService\";\nimport './PostProject.scss';\n\n\nexport default class NewProject extends React.Component {\n  projectsService = new ProjectsService();\n\n  state = {\n     name: \"\", info: \"\"\n  };\n\n  componentDidMount() {}\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n   \n  };\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.projectsService.addProject(this.state);\n  };\n\n\n\n  render() {\n    return (\n     \n      <div className=\"titulo\">\n        <h1>\n          Crear Nuevo Proyecto\n        </h1>\n      <div className=\"NewProject\">\n        \n        <img src={startup} alt=\"startup_project\" className=\"portada\"></img>\n\n        <form className=\"form-style-9\" onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Nombre de la proyecto:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <fieldset>\n            <label>Describe tu proyecto:</label>\n            <textarea \n              cols=\"40\" rows=\"5\"\n              type=\"text\"\n              name=\"info\"\n              value={this.state.description}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input type=\"submit\" value=\"Crear nuevo proyecto\" />\n        </form>\n      </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import './ProjectItem.scss';\n\n\nclass UnsuscribeProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: \"\",\n      id: \"\",\n      succeed: \"\",\n      error: false,\n      allprojects: []\n    };\n  }\n\n//   componentDidMount = () => this.oneProject();\n//   oneProject = () => {\n//     this.services\n//       .oneProject(this.props.match.params.id)\n//       .then(oneproject => this.setState({ project: oneproject }))\n//       .catch(err => console.log(err));\n//   };\n\n  handleFormSubmit = e => {\n    e.preventDefault()\n    this.props.unfollowproject()\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  \n\n\n\n\n  render() {\n  return (\n    <div>\n      <div className=\"despliegue\">\n        <p>{this.props.project.project_type}</p>\n        <Link to={`/projects/${this.props.project._id}`}><h1>{this.props.project.name}</h1></Link>\n        <Link to={`/projects/${this.props.project._id}`}><img src={this.props.project.imageURL} width=\"300px\" /></Link>\n        <Link to={`/projects/${this.props.project._id}`}><p>{this.props.project.info}</p></Link>\n        <form onSubmit={e => this.handleFormSubmit(e)}>\n        <input className=\"button\" type=\"submit\" value=\"Dejar de Seguir\" />\n        </form>\n       \n\n      </div>\n    </div>\n  );\n}\n}\n\nexport default UnsuscribeProject;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UsersService from \"../../service/UsersService\";\nimport AuthService from \"../../service/AuthService\";\nimport FoundationsItem from \"../Foundations/FoundationItem\";\nimport portadaprofile from \"../contents/start_up.svg\";\nimport \"./UserDetail.scss\";\nimport axios from 'axios'\nimport ProjectsItem from \"../../components/contents/ProjectItem\";\nimport UnsuscribeProject from \"../../components/Projects/UnsuscribeProject\"\n\nexport default class UserDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null, subscribers:[] };\n    this.service = new AuthService();\n    \n  }\n\n    componentDidMount() {\n      this.fetchAllInfo()\n    }\n\n    fetchAllInfo (){\n    axios.get(`http://localhost:3001/api/projects/projects/${this.props.userInSession._id}`)\n      .then(responseFromApi => {\n        this.setState({\n         \n          subscribers: responseFromApi.data\n\n          \n        })\n      })\n    }\n\n\n    \n\n    unfollowproject(projectID, SUBSCRIPTOR){\n      axios.put(`http://localhost:3001/api/projects/deletesubscriber/${projectID}` ,{SUBSCRIPTOR})\n        .then(_=> {\n          this.fetchAllInfo()\n        })\n        .catch(_=> {\n          this.setState({\n            error: true\n          });\n        });\n    }\n  \n  \n  \n  render() {\n    console.log(this.props.userInSession);\n    console.log(this.state.subscribers);\n\n\n    return (\n      <div className=\"user\">\n        {this.props.userInSession.username ? (\n          <div className=\"user-detail-view\">\n            <h1>Hola {this.props.userInSession.username}</h1>\n            <h1>{this.state.subscribers.name}</h1>\n\n            <img\n              src={portadaprofile}\n              alt=\"portadaprofile\"\n              // width=\"600px\"\n              class=\"portada\"\n            />\n            <h2>Estas son tus fundaciones</h2>\n            <div className=\"contenedor\">\n            {this.props.userInSession &&\n              this.props.userInSession.foundations_created.map(foundation => (\n                <FoundationsItem foundation={foundation} key={foundation._id} />\n              ))}\n              </div>\n            \n            <h2>Estos son los proyectos a los que estas suscrito</h2>\n       \n            {this.state.subscribers.map(project => (\n               <div className=\"contenedor\">\n                <UnsuscribeProject unfollowproject={()=>this.unfollowproject(project._id, this.props.userInSession._id)} project={project} key={project._id}/>\n                \n                {/* <button onClick={() => \n              \n                }</button> */}\n                \n            </div>\n                \n                \n              ))}\n             \n          </div>\n        ) : (\n          //   console.log(\"No hay na\");\n          console.log(this.state)\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport startup from '../contents/startup.svg';\nimport ProjectsService from \"../../service/ProjectsService\";\nimport './EditProject.scss'\n\nexport default class EditProject extends React.Component {\n  projectsService = new ProjectsService();\n\n  state = {\n     name: null, info: null\n  };\n\n  componentDidMount() {}\n  handleChange = event => {\n    let { name, value } = event.target;\n    console.log(name, value);\n    name = name !==  \"\" ? name : null;\n    value = value !==  \"\" ? value : null \n    this.setState({ [name]: value });\n   \n  };\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.projectsService.editProject(this.props.match.params.id, this.state)\n  }\n\n  render() {\n    return (\n\n\n    <div className=\"titulo\">\n      <h1>Edita tu proyecto</h1>\n      <div className=\"editProject\">\n       \n        <img src={startup} alt=\"startup_project\" className=\"portada\"></img>\n\n        <form className=\"form-style-9\" onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Edita el nombre de proyecto:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <fieldset>\n            <label>Edita la información de tu proyecto:</label>\n            <textarea \n              cols=\"40\" rows=\"5\"\n              type=\"text\"\n              name=\"info\"\n              value={this.state.description}\n              onChange={e => this.handleChange(e)}\n            />\n            \n          </fieldset>\n          \n          \n          <input type=\"submit\" value=\"Editar Proyecto\" />\n        </form>\n      </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from \"./components/navbar/Navbar\";\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./service/AuthService\";\nimport Contents from \"./components/contents/Contents\";\nimport ProjectsService from \"./service/ProjectsService\";\nimport Projects from \"./components/Projects/Projects\";\nimport Foundations from \"./components/Foundations/Foundations\";\nimport FoundationsService from \"./service/FoundationsService\";\nimport SearchBar from \"./components/Searchbar/SearchBar\";\nimport ProjectDetail from \"./components/Projects/ProjectDetail\";\nimport FoundationDetail from \"./components/Foundations/FoundationDetail\";\nimport Navigator from \"./components/navbar/Navigavtor\";\nimport NewFoundation from \"./components/Foundations/PostFoundation\";\nimport NewProject from \"./components/Projects/PostProject\";\nimport UserDetail from \"./components/User/UserDetail\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EditProject from './components/Projects/EditProject';\n\n\n//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nclass App extends React.Component {\n\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props);\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = {\n      loggedInUser: null,\n      projects: [],\n      projectsAll: [],\n      foundations: [],\n    };\n    this.service = new AuthService();\n    this.ProjectsService = new ProjectsService();\n    this.FoundationsService = new FoundationsService();\n    this.fetchUser();\n    this.fetchProjects();\n    this.fetchFoundations();\n  }\n\n  componentDidMount = () => {\n\n    console.log(this.state.projectsAll)\n  }\n \n  filterProjects = (e) => {\n    const filteredProjects=this.state.projectsAll.filter(project => {\n      \n      return project.name.toLowerCase().includes(e.target.value.toLowerCase())\n    })\n    // console.log(filteredProjects);\n    console.log(this.state.projectsAll)\n    this.setState({\n      projects: filteredProjects\n    })\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n\n\n  fetchOneUser = () => {\n\n    return this.UserService.oneService().then(oneUser => {\n      this.setState({\n        user: oneUser\n      })\n    })\n  }\n\n  fetchProjects = () => {\n    return this.ProjectsService.allProjects().then(allProjects => {\n      this.setState({\n        projectsAll: allProjects,\n        projects: allProjects\n      });\n    });\n  };\n\n  // fetchOneProject = () => {\n  //   return this.ProjectService.oneProject().then(oneProject => {\n  //     this.setState({\n  //       project: oneProject\n  //     });\n  //   });\n  // };\n\n  fetchFoundations = () => {\n    return this.FoundationsService.allFoundations().then(allFoundations => {\n      this.setState({\n        foundations: allFoundations\n      });\n    });\n  };\n\n  fetchOneFoundation = () => {\n    return this.FoundationsService.oneFoundation().then(oneFoundation => {\n      this.setState({\n        foundation: oneFoundation\n      });\n    });\n  };\n\n  addFoundation = () => {\n    return this.FoundationsService.addFoundation().then(addFoundation => {\n\n      this.setState({\n        foundations: addFoundation\n      })\n    })\n  }\n\n  addProject = () => {\n    return this.ProjectsService.addProject().then(addProject => {\n      this.setState({\n        projects: addProject\n      })\n    })\n  }\n\n  editProject = () => {\n    return this.ProjectsService.editProject().then(editProject => {\n      this.setState({\n        projects: editProject\n      })\n    })\n  }\n\n \n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              {/* <Navigator /> */}\n              <Navbar\n                className=\"navbar\"\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <Switch>\n            <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Contents\n                    fetchProjects={this.fetchProjects}\n                    projects={this.state.projects}\n                  />\n                )}\n              />\n              {/* Muestra todos los proyectos */}\n              <Route\n                exact\n                path=\"/projects\"\n                render={() => (\n                  <Projects\n                    fetchProjects={this.fetchProjects}\n                    projects={this.state.projects}\n                    filterProjects={this.filterProjects}\n                  />\n                )}\n              />\n              \n\n              {/* Muestra todas las fundaciones */}\n              <Route\n                exact\n                path=\"/foundations\"\n                render={() => (\n                  <Foundations\n                    fetchFoundations={this.fetchFoundations}\n                    foundations={this.state.foundations}\n                  />\n                )}\n              />\n              <Route\n                path=\"/projects/:id\"\n                render={props => <ProjectDetail {...props} loggedInUser={this.state.loggedInUser} />}\n              />\n\n              <Route\n                path=\"/foundations/:id\"\n                render={props => <FoundationDetail {...props} />}\n              />\n\n              <Route path=\"/addFoundation\"\n              render={() => (\n                <NewFoundation />\n              )}></Route>\n\n              <Route path=\"/addproject\"\n              render={() => (\n                <NewProject />\n              )}></Route>\n\n              <Route path=\"/editproject/:id\"\n              render={props => \n                <EditProject {...props} />\n              }></Route>\n\n\n\n\n              <Route path=\"/account/:id\"\n              render={() => (<UserDetail userInSession={this.state.loggedInUser} getUser={this.getUser}/> \n              )}></Route>\n           \n              \n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n\n\n\n\n      \n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Contents\n                    fetchProjects={this.fetchProjects}\n                    projects={this.state.projects}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => <Signup getUser={this.getUser} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={props => <Login getUser={this.getUser} {...props} />}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}