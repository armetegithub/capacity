{"version":3,"sources":["components/navbar/capacity_logo.svg","components/contents/portada1.svg","service/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/contents/ProjectItem.js","components/header/Header.js","components/contents/Contents.js","service/ProjectsService.js","components/Searchbar/SearchBar.js","components/Projects/Projects.js","components/navbar/Navigavtor.js","components/Foundations/FoundationItem.js","components/Foundations/Foundations.js","service/FoundationsService.js","components/Projects/ProjectDetail.js","components/Foundations/FoundationDetail.js","components/Foundations/PostFoundation.js","components/Projects/PostProject.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","signup","username","password","email","comunidad","service","post","then","response","data","login","console","log","loggedin","get","logout","this","axios","create","baseURL","process","REACT_APP_API_URL","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","nextProps","setState","className","to","src","logo","alt","width","class","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","name","value","comunidades","sort","map","onSubmit","type","onChange","cargar_provincias","Login","history","push","ProjectItem","project","project_type","_id","imageURL","info","Header","portada","Contents","fetchProjects","_","projects","key","ProjectsService","allProjects","subscribeProject","idProject","idUser","oneProject","id","addProject","SearchBar","search","filtered","handleSearch","bind","placeholder","Projects","FoundationtItem","foundation","description","Foundations","fetchFoundations","foundations","FoundationItem","FoundationsService","allFoundations","addFoundation","oneFoundation","ProjectDetail","services","newSuscriber","updateProject","specificProject","err","componentDidMount","match","params","oneproject","React","FoundationDetail","onefoundation","NewFoundation","foundationsService","cols","rows","NewProject","projectsService","App","userObj","fetchOneProject","ProjectService","fetchOneFoundation","fetchUser","Fragment","userInSession","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c0202c01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/capacity_logo.11168314.svg\";","module.exports = __webpack_public_path__ + \"static/media/portada1.89436ec0.svg\";","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL:`${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, email, comunidad) => {\n    return this.service.post('/signup', {username, password, email, comunidad})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    console.log(username, password)\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../service/AuthService\";\nimport logo from \"../navbar/capacity_logo.svg\";\n\n\n\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n    \n        <div className=\"navbar-div\">\n          <nav className=\"nav-style\">\n            <Link to=\"#\">\n              <img src={logo} alt=\"logo\" width=\"400px\" class=\"logo\" />\n            </Link>\n            <ul>\n              <div className=\"right-nav\">\n                <li>\n                  <Link to=\"/foundations\">Fundaciones</Link>\n                </li>\n                <li>\n                  <Link to=\"/projects\">Proyectos</Link>\n                </li>\n                <li>\n                  <a onClick={this.handleLogout}>Logout</a>\n                </li>\n              </div>\n              <span>Hola, {this.state.loggedInUser.username}</span>\n            </ul>\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"navbar-div\">\n          <nav className=\"nav-style\">\n            <Link to=\"#\">\n              <img src={logo} alt=\"logo\" width=\"400px\" class=\"logo\" />\n            </Link>\n            <ul>\n              <div className=\"right-nav\">\n                <li>\n                  <Link to=\"/signup\">Signup</Link>\n                </li>\n                <li>\n                  <Link to=\"/login\">Login</Link>\n                </li>\n              </div>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from '../../service/AuthService';\n\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', email: '', comunidad: '' };\n    this.service = new AuthService();\n  }\n\n  \n\n   // Rutina para agregar opciones a un <select>\n\n  cargar_provincias() {\n  let comunidades = [\"Andalucía\", \"Aragón\", \"Canarias\", \"Cantabria\", \"Castilla y León\", \"Castilla-La Mancha\", \"Cataluña\", \"Ceuta\", \"Comunidad Valenciana\", \"Comunidad de Madrid\", \"Extremadura\", \"Galicia\", \"Islas Baleares\", \"La Rioja\", \"Melilla\", \"Navarra\", \"País Vasco\", \"Asturias\", \"Murcia\"];\n\n    // Ordena el Array Alfabeticamente, es muy facil ;)):\n      comunidades.sort();\n        return comunidades.map(comunidad => <option>{comunidad}</option>)\n    //addOptions(\"provincia\", comunidades);\n   }\n\n\n   \n  \n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    const email = this.state.email;\n    const comunidad = this.state.comunidad;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password, email, comunidad)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            email: \"\",\n            comunidad: \"\"\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        email: email,\n        comunidad: comunidad,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (e) => {  \n    const {name, value} = e.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Bienvenido, Por favor, crea tu cuenta</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n\n          <fieldset>\n            <label>Email:</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n\n          <fieldset>\n          <label>Elige tu comunidad autónoma: </label>\n\n          <select name=\"comunidad\" value={this.state.comunidad} onChange={ e => this.handleChange(e)}>\n          \n            {this.cargar_provincias()}\n            </select>\n          </fieldset>\n\n          \n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../service/AuthService';\nimport \"./Login.scss\"\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    \n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n        this.props.history.push('/projects')\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    console.log(\"Dentro de login\")\n    return (\n    <div className=\"container-form\">\n      <h3>Welcome to Capacity</h3>\n\n      <form className=\"form-style-9\" onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './ProjectItem.scss';\n\nfunction ProjectItem(props) {\n  return (\n    <div>\n      <div className=\"despliegue\">\n        <p>{props.project.project_type}</p>\n        <Link to={`/projects/${props.project._id}`}><h1>{props.project.name}</h1></Link>\n        <Link to={`/projects/${props.project._id}`}><img src={props.project.imageURL} width=\"300px\" /></Link>\n        <Link to={`/projects/${props.project._id}`}><p>{props.project.info}</p></Link>\n\n \n        {/* {props.project.foundation.name} */}\n        <button>Más Información</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectItem;\n","import React, { Component } from 'react';\n// import ProjectItem from './ProjectItem';\n// import './Content.scss';\nimport 'typeface-roboto';\nimport portada from '../contents/portada1.svg';\n\n\nclass Header extends Component {\n    constructor(props){\n      super(props)\n    }\n  \n  \n    render() {\n      return (<div className=\"header\">\n  \n        <div className=\"cabecera-portada\">\n          <h1>Bienvenidos a capacity</h1>\n          <h2>¿Estás listo para poner al máximo tus capacidades?</h2>\n          <img src={portada} alt=\"portada\" width=\"600px\" class=\"portada\" />\n        </div>\n        </div>\n  \n      \n      )}\n  }\n  \n  export default Header;","import React, { Component } from 'react';\nimport ProjectItem from './ProjectItem';\nimport './Content.scss';\nimport 'typeface-roboto';\nimport portada from '../contents/portada1.svg';\nimport Header from '../header/Header';\n\n\n\n//clase componente que renderiza los contenidos genéricos\n//usando rendering condicional y el componente Switch que ya conocéis podéis mostrar los contenidos oportunos que queráis\nclass Contents extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  componentDidMount(){\n    this.props.fetchProjects()\n    .then(_ => console.log(this.props))\n  }\n\n  render() {\n    return (<div className=\"contents\">\n\n      <Header />\n\n      <h3>ÚLTIMOS PROYECTOS</h3>\n       \n        <div className= \"contenedor\">\n    \n          \n        {this.props.projects.map(project=>(\n       \n            <ProjectItem project={project} key={project._id}/>\n          \n        ))}\n        </div>\n        \n        </div>\n       \n    );\n  }\n}\n\nexport default Contents;","import axios from 'axios';\n\nclass ProjectsService {\n    constructor() {\n      this.service = axios.create({\n        baseURL:`${process.env.REACT_APP_API_URL}/projects`,\n        withCredentials: true\n      });\n    }\n\n    allProjects = () => {\n        return this.service.get('/')\n        .then(response => {\n            return response.data\n        });\n    }\n\n    subscribeProject = (idProject, idUser) => {\n      console.log(idUser)\n      return this.service.post(`/subscribe/${idProject}`, idUser)\n      .then(response => response.data)\n    }\n\n    oneProject = id => this.service.get(`/${id}`).then(response => response.data);\n\n    addProject = project => {\n      console.log(project)\n      this.service.post('/addproject', project).then(response => response.data);\n    };\n\n\n\n     \n  \n  }\n\n\n  \n\n\n\n\n\n\nexport default ProjectsService;","import React, { Component } from \"react\";\nimport projects from \"../Projects/Projects\";\nimport './SearchBar.scss'\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {search: ''}\n    // filtered: [];\n    \n  }\n\n\n  componentDidMount(){\n\n    this.setState({\n        filtered: this.props.projects\n    })\n  }\n\n  componentWillReceiveProps(nextProps){\n      this.setState({\n          filtered: nextProps.projects\n      })\n  }\n\n  handleChange = (e) => {\n\n    this.setState({\n        search:e.target.value\n    });\n\n    // let currentList = [];\n\n    // let newList = [];\n\n    // if(e.target.value !== \"\"){\n    //     currentList = this.props.projects;\n    \n\n    // newList = currentList.filter(item => {\n\n    //     const lc = item.toLowerCase();\n\n    //     const filter = e.target.value.toLowerCase();\n\n    //     return lc.inludes();\n\n\n    // });\n\n    // }else{\n\n    //     newList = this.porps.projects\n    // }\n\n    // this.setState({\n    //     filtered:newList\n    // })\n\n  }\n\n\n  \n\n  render(){\n\n    const {handleSearch} = this.props\n    const {search} = this.state\n    this.handleChange = this.handleChange.bind(this);\n    \n    return(\n\n        <div className=\"search-container\">\n          <div className=\"search-box\">\n\n            <input onChange={this.handleChange} \n            value={search}\n            className=\"search-input\"\n            type=\"text\"\n            placeholder=\"Introduce tu búsqueda...\"/>\n            <span></span>\n            {/* <button className=\"searchButton\" onClick={() =>  handleSearch(search)}>Search</button> */}\n            </div>\n\n        </div>\n\n    )\n  }\n\n}\n\n// Search.propTypes = {\n\n//     handleChange: propTypes.func.isRequired\n// }\n\nexport default SearchBar;","import React, { Component } from \"react\";\nimport ProjectItem from \"../contents/ProjectItem\";\nimport \"./Project.scss\";\nimport \"typeface-roboto\";\nimport Header from \"../header/Header\";\nimport SearhcBar from \"../Searchbar/SearchBar\";\nimport Navigator from \"../navbar/Navigavtor\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchProjects().then(_ => console.log(this.props));\n  }\n\n  handleSearch = search => {\n    console.log(search);\n  };\n\n  render() {\n    return (\n      <div className=\"contents\">\n        <div className=\"projects-search\">\n          <h3>PROYECTOS</h3>\n\n          <SearhcBar handleSearch={this.handleSearch} />\n        </div>\n\n        <div className=\"contenedor\">\n          {this.props.projects.map(project => (\n            <ProjectItem project={project} key={project._id} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../service/AuthService\";\nimport logo from \"../navbar/capacity_logo.svg\";\n\n\n\n\n\nclass Navigator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <ul>\n            <li>\n              <a onClick={this.handleLogout}>Logout</a>\n            </li>\n          </ul>\n\n          <div className=\"header\">\n            <h2>Welcome {this.state.loggedInUser.username} - Ironhacker</h2>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <div className=\"navbar-div\">\n          <nav className=\"nav-style\">\n            <Link to=\"#\">\n              <img src={logo} alt=\"logo\" width=\"400px\" class=\"logo\" />\n            </Link>\n            <ul>\n              <div className=\"right-nav\">\n                <li>\n                  <Link to=\"/signup\">Signup</Link>\n                </li>\n                <li>\n                  <Link to=\"/login\">Login</Link>\n                </li>\n              </div>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navigator;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import './ProjectItem.scss';\n\nfunction FoundationtItem(props) {\n  return (\n    <div>\n      <div className=\"despliegue\">\n       \n      <Link to={`/foundations/${props.foundation._id}`}><h1>{props.foundation.name}</h1></Link>\n      <Link to={`/foundations/${props.foundation._id}`}><img src={props.foundation.imageURL} width=\"300px\" /></Link>\n      <p>{props.foundation.description}</p>\n       \n        {/* {props.project.foundation.name} */}\n      \n      </div>\n    </div>\n  );\n}\n\nexport default FoundationtItem;","import React, { Component } from \"react\";\nimport FoundationItem from \"./FoundationItem\";\nimport {Link} from 'react-router-dom';\n// import \"./Project.scss\";\nimport \"typeface-roboto\";\nimport Header from \"../header/Header\";\nimport SearhcBar from \"../Searchbar/SearchBar\";\nimport Navigator from \"../navbar/Navigavtor\";\n\nclass Foundations extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchFoundations().then(_ => console.log(this.props));\n  }\n\n  handleSearch = search => {\n    console.log(search);\n  };\n\n  render() {\n    return (\n      <div className=\"contents\">\n      \n          <h3>Foundations</h3>\n\n        \n        <Link to=\"/addFoundation\">Crear fundación</Link>\n        <div className=\"contenedor\">\n          {this.props.foundations.map(foundation => (\n            <FoundationItem foundation={foundation} key={foundation._id} />\n          ))}\n        </div>\n      </div>\n \n    );\n  }\n}\n\nexport default Foundations;\n","import axios from 'axios';\n\nclass FoundationsService {\n    constructor() {\n      this.service = axios.create({\n        baseURL:`${process.env.REACT_APP_API_URL}/foundations`,\n        withCredentials: true\n      });\n    }\n\n    allFoundations = () => {\n        return this.service.get('/')\n        .then(response => {\n            return response.data\n        });\n    }\n\n\n    addFoundation = foundation => {\n      console.log(foundation)\n      this.service.post('/addFoundation', foundation).then(response => response.data);\n    };\n\n\n\n    oneFoundation = id => this.service.get(`/${id}`).then(response => response.data);\n}\n\n\n\nexport default FoundationsService;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectsService from \"../../service/ProjectsService\";\nexport default class ProjectDetail extends React.Component {\n  // state = {\n  //   project: {};\n  //   this.services = new ProjectsService()\n\n  // };\n\n  constructor(props) {\n    super(props);\n    this.state = { project: null };\n    this.services = new ProjectsService();\n  }\n\n subscribeProject = () =>{\n\n  this.services.subscribeProject(this.state.project._id, \n    {newSuscriber: this.props.loggedInUser._id })\n  .then(updateProject => this.setState({specificProject: updateProject}))\n  .catch(err => console.log(err));\n  \n\n }\n  componentDidMount = () => this.oneProject();\n  oneProject = () => {\n    this.services\n      .oneProject(this.props.match.params.id)\n      .then(oneproject => this.setState({ project: oneproject }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    console.log(this.props.loggedInUser);\n    return (\n      <div className=\"Project\">\n        {this.state.project ? (\n          <div className=\"detail-view\">\n            <h1>{this.state.project.name}</h1>\n            <img src={this.state.project.imageURL} />\n            <p>{this.state.project.info}</p>\n            <button onClick={()=>this.subscribeProject()}>Inscribirse</button>\n          </div>\n        ) : (\n          console.log(\"No hay na\")\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FoundationsService from \"../../service/FoundationsService\";\nimport ProjectItem from \"../contents/ProjectItem\";\nimport './FoundationDetail.scss';\nexport default class FoundationDetail extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n    this.state = { foundation: null };\n    this.services = new FoundationsService();\n  }\n\n\n\n  componentDidMount = () => this.oneFoundation();\n  oneFoundation = () => {\n    this.services\n      .oneFoundation(this.props.match.params.id)\n      .then(onefoundation => this.setState({ foundation: onefoundation }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    console.log(this.state.foundation);\n    return (\n      <div className=\"foundation\">\n      <Link to=\"/addproject\">Crear Nuevo Proyecto</Link>\n        {this.state.foundation ? (\n          <div className=\"detail-view\">\n            <h1>{this.state.foundation.name}</h1>\n            <img src={this.state.foundation.imageURL} />\n            <p>{this.state.foundation.description}</p>\n          </div>\n        ) : (\n          console.log(\"No hay na\")\n        )}\n\n\n        <div className=\"despliegue-proyect\">\n        {this.state.foundation && this.state.foundation.projects.map(project => (\n            \n            <ProjectItem project={project} key={project._id} />\n                  \n        ))}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n","import React from \"react\";\n\nimport FoundationsService from \"../../service/FoundationsService\";\n\nexport default class NewFoundation extends React.Component {\n  foundationsService = new FoundationsService();\n\n  state = {\n     name: \"\", info: \"\", project_type: \"\", comunidad: \"\" \n  };\n\n  componentDidMount() {}\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n   \n  };\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.foundationsService.addFoundation(this.state);\n  };\n\n  cargar_provincias() {\n    let comunidades = [\"Andalucía\", \"Aragón\", \"Canarias\", \"Cantabria\", \"Castilla y León\", \"Castilla-La Mancha\", \"Cataluña\", \"Ceuta\", \"Comunidad Valenciana\", \"Comunidad de Madrid\", \"Extremadura\", \"Galicia\", \"Islas Baleares\", \"La Rioja\", \"Melilla\", \"Navarra\", \"País Vasco\", \"Asturias\", \"Murcia\"];\n  \n      // Ordena el Array Alfabeticamente, es muy facil ;)):\n        comunidades.sort();\n          return comunidades.map(comunidad => <option>{comunidad}</option>)\n      //addOptions(\"provincia\", comunidades);\n     }\n\n\n  render() {\n    return (\n      <div className=\"NewFoundation\">\n        <h1>New Foundation Page</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Nombre de la fundación:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <fieldset>\n            <label>Describe tu fundación:</label>\n            <textarea \n              cols=\"40\" rows=\"5\"\n              type=\"text\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label>Email de la fundación:</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <label>Elige tu comunidad autónoma: </label>\n\n          <fieldset>\n            <select\n              name=\"comunidad\"\n              value={this.state.comunidad}\n              onChange={e => this.handleChange(e)}\n            >\n              {this.cargar_provincias()}\n            </select>\n          </fieldset>\n          <input type=\"submit\" value=\"Crear nueva fundación\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport ProjectsService from \"../../service/ProjectsService\";\n\nexport default class NewProject extends React.Component {\n  projectsService = new ProjectsService();\n\n  state = {\n     name: \"\", info: \"\"\n  };\n\n  componentDidMount() {}\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n   \n  };\n  handleFormSubmit = e => {\n    e.preventDefault();\n    this.projectsService.addProject(this.state);\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"NewProject\">\n        <h1>New Project Page</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Nombre de la proyecto:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n          <fieldset>\n            <label>Describe tu proyecto:</label>\n            <textarea \n              cols=\"40\" rows=\"5\"\n              type=\"text\"\n              name=\"info\"\n              value={this.state.description}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input type=\"submit\" value=\"Crear nuevo proyecto\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from \"./components/navbar/Navbar\";\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./service/AuthService\";\nimport Contents from \"./components/contents/Contents\";\nimport ProjectsService from \"./service/ProjectsService\";\nimport Projects from \"./components/Projects/Projects\";\nimport Foundations from \"./components/Foundations/Foundations\";\nimport FoundationsService from \"./service/FoundationsService\";\nimport SearchBar from \"./components/Searchbar/SearchBar\";\nimport ProjectDetail from \"./components/Projects/ProjectDetail\";\nimport FoundationDetail from \"./components/Foundations/FoundationDetail\";\nimport Navigator from \"./components/navbar/Navigavtor\";\nimport NewFoundation from \"./components/Foundations/PostFoundation\";\nimport NewProject from \"./components/Projects/PostProject\";\n\n//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nclass App extends React.Component {\n\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props);\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = {\n      loggedInUser: null,\n      projects: [],\n      foundations: []\n    };\n    this.service = new AuthService();\n    this.ProjectsService = new ProjectsService();\n    this.FoundationsService = new FoundationsService();\n    this.fetchUser();\n    this.fetchProjects();\n    this.fetchFoundations();\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  fetchProjects = () => {\n    return this.ProjectsService.allProjects().then(allProjects => {\n      this.setState({\n        projects: allProjects\n      });\n    });\n  };\n\n  fetchOneProject = () => {\n    return this.ProjectService.oneProject().then(oneProject => {\n      this.setState({\n        project: oneProject\n      });\n    });\n  };\n\n  fetchFoundations = () => {\n    return this.FoundationsService.allFoundations().then(allFoundations => {\n      this.setState({\n        foundations: allFoundations\n      });\n    });\n  };\n\n  fetchOneFoundation = () => {\n    return this.FoundationsService.oneFoundation().then(oneFoundation => {\n      this.setState({\n        foundation: oneFoundation\n      });\n    });\n  };\n\n  addFoundation = () => {\n    return this.FoundationsService.addFoundation().then(addFoundation => {\n\n      this.setState({\n        foundations: addFoundation\n      })\n    })\n  }\n\n  addProject = () => {\n    return this.ProjectsService.addProject().then(addProject => {\n      this.setState({\n        projects: addProject\n      })\n    })\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      //en este caso mostramos los contenidos ya que hay usuario\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              {/* <Navigator /> */}\n              <Navbar\n                className=\"navbar\"\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <Switch>\n              {/* Muestra todos los proyectos */}\n              <Route\n                exact\n                path=\"/projects\"\n                render={() => (\n                  <Projects\n                    fetchProjects={this.fetchProjects}\n                    projects={this.state.projects}\n                  />\n                )}\n              />k\n\n              {/* Muestra todas las fundaciones */}\n              <Route\n                exact\n                path=\"/foundations\"\n                render={() => (\n                  <Foundations\n                    fetchFoundations={this.fetchFoundations}\n                    foundations={this.state.foundations}\n                  />\n                )}\n              />\n              <Route\n                path=\"/projects/:id\"\n                render={props => <ProjectDetail {...props} loggedInUser={this.state.loggedInUser} />}\n              />\n\n              <Route\n                path=\"/foundations/:id\"\n                render={props => <FoundationDetail {...props} />}\n              />\n\n              <Route path=\"/addFoundation\"\n              render={() => (\n                <NewFoundation />\n              )}></Route>\n\n              <Route path=\"/addproject\"\n              render={() => (\n                <NewProject />\n              )}\n\n            />\n              \n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n\n\n\n\n      \n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar\n                userInSession={this.state.loggedInUser}\n                logout={this.logout}\n              />\n            </header>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <Contents\n                    fetchProjects={this.fetchProjects}\n                    projects={this.state.projects}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => <Signup getUser={this.getUser} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={props => <Login getUser={this.getUser} {...props} />}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}